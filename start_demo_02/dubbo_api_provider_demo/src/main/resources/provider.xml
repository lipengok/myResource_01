<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:dubbo="http://dubbo.apache.org/schema/dubbo"
       xsi:schemaLocation="http://www.springframework.org/schema/beans        http://www.springframework.org/schema/beans/spring-beans-4.3.xsd        http://dubbo.apache.org/schema/dubbo        http://dubbo.apache.org/schema/dubbo/dubbo.xsd">

    <!-- 1，提供方应用信息，用于计算依赖关系 -->
    <dubbo:application name="dubbo_api_provider"  />

    <!-- 使用multicast广播注册中心暴露服务地址 -->
    <!--<dubbo:registry address="multicast://224.5.6.7:1234" />-->

    <!-- 2，暴露服务地址：使用zookeeper注册中心暴露服务地址 -->
    <dubbo:registry protocol="zookeeper" address="127.0.0.1:2181"/>

    <!-- 3，暴露服务：用dubbo协议在20880端口暴露服务 -->
    <dubbo:protocol name="dubbo" port="20880" />

    <!-- 4，声明需要暴露的服务接口 -->
    <dubbo:service interface="com.lp.dubbo_api_demo.service.UserService" ref="userService" />

    <!-- 暴露的服务接口实现 -->
    <bean id="userService" class="com.lp.dubbo_api_provider_demo.service.UserServiceImpl" />

    <!-- 5，一些基础的配置 -->
    <!-- 当ProtocolConfig和ServiceConfig某属性没有配置时,采用此缺省值，使用默认配置 -->
    <!--
    # 自定义配置
    threads：服务线程池大小(固定大小)，默认值200。
    timeout：远程服务调用超时时间(毫秒)，默认值1000。
    threadpool：线程池类型，可选：fixed/cached，默认值fixed。
    accepts：服务提供者最大可接受连接数，默认值0.
    -->
    <dubbo:provider timeout="3000" threadpool="fixed" threads="500" accepts="1000"/>

    <!-- 6，开启provider的时候检查消费者是否存在依赖 -->
    <dubbo:consumer check="false"/>

    <!-- 使用注解方式暴露接口，会自动扫描package下所有包中dubbo相关的注解，这样就不用在xml中再针对每个服务接口配置dubbo:service interface-->
    <!-- <dubbo:annotation package="com.lp.dubbo_api_provider_demo"/> -->
</beans>
