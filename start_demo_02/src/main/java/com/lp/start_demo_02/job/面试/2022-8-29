# kafka
1，什么是kafka
kafka是基于发布订阅的消息队列。
2，kafka的5大组件：
topic，生产者，消费者，broker，zookeeper
3，kafka的优势
    * 缓冲：当大量数据涌入系统的时候，kafka可以将数据缓存到本地，慢慢供消费者消费。
    * 解耦：在项目开发初期并不明确接下来具体需求的时候，消息队列可以作为一个接口层。
    * 健壮性：当消费者出现故障的时候，消息可以被暂时保存到本地，等消费者恢复的时候再来读取。
    * 异步通信：用户可以通过配置kafka，使kafka将消息存储起来，等什么时候消费者需要消息的时候再去取。
4，broker是什么？
生产者会将消息存储到broker里面的指定topic，消费者会从broker里的指定topic里拿数据。
所以broker被称之为----消息代理。
5，zookeeper是什么？能不能不用zookeeper？
zookeeper是----分布式的协调组件。
虽然新版本中，kafka弱化了对zookeeper的依赖，
但是broker依然依赖zookeeper，
zookeeper在kafka中还用来：controller选举，broker存活检验。
6，kafka的高性能（处理速度快）的原因是什么？
缓存，顺序写，批处理，零拷贝
7，说一说kafka的选举
kafka在所有broker中选出一个controller，所有Partition的Leader选举都由controller决定。
controller会将Leader的改变直接通过RPC的方式（比Zookeeper Queue的方式更高效）通知需为此作出响应的Broker。
同时controller也负责增删Topic以及Replica的重新分配。

# dubbo
1，dubbo架构的特性
连通性，健壮性，伸缩性
2，dubbo中如果注册中心挂掉了，生产者消费者能不能继续通信
dubbo具有健壮性，即使生产者消费者在交互的时候dubbo的注册中心挂掉了依然能够通过本地缓存正常通信，
但是不能注册新的服务。
3，dubbo连通性是什么
dubbo的生产者，消费者，注册中心，均是长连接，监控中心除外。
dubbo的生产者和消费者之间可以直接进行连接。
4，dubbo的伸缩性是什么
在服务者无状态的时候，能够将服务者直接部署到服务器，所有的客户端能够自动发现新服务的出现。
在对等集群中，动态新增注册中心，，所有的客户端能够自动发现新注册中心的出现。
5，说一说dubbo
dubbo是阿里巴巴提供的开源的服务架构，通过高性能的rpc进行输入输出。
可以与spring框架无缝衔接。

# redis
1，redis有哪几种数据类型
string，list，set，hash，zset
2，redis设置过期时间函数
expire()
3，给key设置过期时间之后再次set，过期时间还有效吗？
会

# mysql
1，sql的调优
    * 使用连接，代替子查询。
    * 选取合适的字段属性（字段的宽度应在不影响功能的情况下，尽可能小）。
        -- 在数据库中表越小，执行速度越快。
    * 使用事务（begin****commit）。
    * 使用外键
    * 使用索引
    * 查询语句优化：尽量不要在列上运算，尽量不要使用in或not in，like等关键字。
2，sql去重关键字
distinct

# springmvc
1，说一说，springmvc的工作流程
    * 第一步：一个用户请求到来，首先匹配前端控制器DispatchServlet。
    * 第二步：前端控制器将请求信息交给映射器，HandlerMapping。
    * 第三步：映射器给用户的url匹配对应的handler，返回一个执行链。
    * 第四步：DispatchServlet再次请求处理器适配器HandlerAdapter，调用相应的handler进行处理操作
    并且返回ModelAndView给DispatchServlet。
    * 第五步：DispatchServlet将ModelAndView给视图解析器ViewReslover，返回具体的view。
    * 第六步：DispatchServlet对view进行视图渲染（数据填充到视图的过程）。
    * 第七步：DispatchServlet将页面响应给用户。

# springboot
1，springboot的事务注解怎么使用
    * 在启动类上添加注解@EnableTransationMannger开启事务
    * 在public方法上添加注解@Transactional。
    * 在类上添加注解@Transactional，在类上添加事务注解，意味着此类的所有public方法都是开启事务。
2，springboot的事务注解@Transactional属性（了解）
    * readOnly：boolean类型，true为只读表明事务中的方法不可进行读之外的操作。
    * rollbackFor：可为 字符串；也可为数组。用于对指定异常进行回滚。
    * rollbackForNAme：与rollbackFor作用一样，但是值不用写“.class”，直接写类名。
    * noRollbackFor：和rollbackFor用法一样，作用相反：指定不会滚的异常。
    * noRollbackForName：和noRollbackFor作用一样，但是值不用写“.class”，直接写类名。
    * timeout：单位是秒，默认是-1永不超时，作用是：设置事务超时时间。
    * isolation：一般使用默认的隔离级别。作用是：设置事务的隔离级别。
    * propagation：用例：propagation=Propagation.NOT_SUPPORTED。作用是：设置事务的传播行为。
3，事务的四大特性
原子性，持久性，一致性，隔离性

# netty
1，说一说netty
netty是由JBOSS开源的java框架。
netty是高性能，由异步事件驱动的NIO框架。
它提供了对TCP，UDP文件传输的支持。
2，netty的特点
高并发，传输快，封装好。
3，netty为什么支持高并发。
netty是基于NIO（非阻塞IO）实现的网络通信框架。
4，netty为什么传输快。
netty传输快是得益于NIO的特性----零拷贝。
5，为什么说netty封装好
netty封装了NIO操作的细节，提供了便于操作的api。
6，什么是NIO，IO是什么？
NIO：非阻塞IO，无论操作是否完成，都会返回。
IO：阻塞IO，只有操作完成之后才会返回。
7，用过什么其他的网络痛惜架构？为什么选择netty网络通信架构。
socket：由java提供的基于IO的网络通信架构。
netty与socket最大的区别就是netty网络通信架构是基于NIO，
netty具有更好的性能：高并发，传输快，封装好。

# git的常用命令
git clone
git commit -am
git -status
git -push：
git -branch -a：查询所有的分支
git -branch -f：查询远程所有分支
