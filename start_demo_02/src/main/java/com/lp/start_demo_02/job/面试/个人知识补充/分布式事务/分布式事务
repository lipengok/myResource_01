# 什么是分布式事务？
分布式系统中的事务机制
称之为----分布式事务

## 分布式事务四种解决方案。

# 两阶段提交方案
1，两阶段提交方案具体实施。
    * 第一阶段：准备
    事务管理器向节点A，节点B发出执行指令。他们会执行本地方法，锁定资源，返回执行状态。
    * 第二阶段：提交
    事务管理器向节点A，节点B发出提交指令。他们会提交资源变更事务，释放资源，返回提交状态。
2，两阶段提交方案的问题。
    * 节点上的服务一旦执行完之后，在没有接收到协调者（事务管理器）提交通知之前，服务都是处于阻塞的状态。
    * 协调者（事务管理器）在分布式事务中的作用过于重要，一旦出现问题，分布式事务系统就会处于崩溃状态。

# 补偿事务方案
1，补偿事务方案具体实施。
    * 每个事务都有一个对应的确认补偿操作。
    * 确认补偿操作在应用层进行，分成三个阶段：
       try阶段：事务预检，对事务进行预先检查。
       confirm阶段：提交事务/执行事务（try阶段成功，confirm阶段就一定成功）。
       cancel阶段：回滚事务。
2，补偿事务方案问题。
    * 补偿事务方案在应用层进行，无疑是增加了代码的工作量。

# 本地消息表方案
1，本地消息表方案的具体实施。
    * 本地消息表，业务数据表处在同一个数据库中。
    * 一个事务中有两个业务，业务a，业务b。
    * 首先选择一个业务去执行，业务a执行成功的时候，同时会写入消息到消息表。
    * 消息表中的消息会被写入kafka，业务b从kafka获取到消息的时候，根据消息状态去执行。
    * 执行完消息b之后，没有问题的话修改消息的状态。
2，本地消息表方案的问题。
    本地消息表会耦合到业务之中，如果处理不好的话会有很多的杂活处理。

# MQ事务消息方案
RabbitMQ，Kafka消息队列都是不支持事务的MQ。
RocketMQ消息队列支持事务。
1，MQ事务消息方案的具体实施。
    * 第一阶段：拿到消息的地址。
    * 第二阶段：处理本地事务。
    * 第三阶段：通过消息地址访问消息，修改消息状态。
3，MQ事务的问题
    实现难度大，RocketMQ部分未开源










